* <2003-10-17>                                                                 ;
*******************************************************************************;
* Decile Analysis of a Continuous Variable With Respect to An Event            ;
  %MACRO LOGITGR(VAR=, BY='ALL', EVENT=EVENT, GROUPS=GROUPS, MEAN=MEAN, MAX=MAX,
                 MIN=MIN, PROB=PROB, N=N, SUM=SUM, LOGIT=LOGIT, IN=,
                 OUT=LOGIT, GOMPIT=0, COX=0, INTERVAL=);
*______________________________________________________________________________;
*                                                                              ;
* DEFINITIONS OF CALLING ARGUMENTS:            DEFAULT:                        ;
*                                                                              ;
*   EVENT    = Event (0/1) indicator             EVENT                         ;
*   VAR      = Variable to be categorized                                      ;
*   BY       = Variable to be sorted by          ALL (no BY variable)          ;
*   GROUPS   = Variable identifying groups       GROUPS                        ;
*   MEAN     = Mean within each group of VAR     MEAN                          ;
*   MAX      = Max within each group of VAR      MAX                           ;
*   MIN      = Min within each group of VAR      MIN                           ;
*   PROB     = Group probability of event        PROB                          ;
*   LOGIT    = Logit for each group              PROB                          ;
*   N        = Number of observations in decile  N                             ;
*   SUM      = Number of events in decile        EVENTS                        ;
*   IN       = Input data set name                                             ;
*   OUT      = Output data set name              LOGIT                         ;
*   GOMPIT   = Gompertz rather than logistic     0 (1 for GOMPIT)              ;
*   COX      = Use Cox transform (const. hazard) 0 (1 for COX)                 ;
*   INTERVAL = Interval to event (Cox method)    Not given                     ;

*______________________________________________________________________________;
*                                                                              ;
* Refine data set                                                              ;
  DATA &OUT; SET &IN;
  OPTIONS NONOTES;
  IF &VAR=. THEN DELETE;
  %IF &COX=1 %THEN %DO;  IF &INTERVAL=. THEN DELETE; %END;
* Determine if there is a by variable                                          ;
  DATA &OUT; SET &IN;
  RETAIN _BY_;
  _BY=&BY;
  TEST=0;
  IF _N_=1 THEN _BY_=_BY;
    ELSE IF _BY NE _BY_ THEN TEST=1;
  %IF &COX=1 %THEN %DO;
    KEEP &VAR &EVENT &GROUPS &INTERVAL TEST _BY;
  %END;
  %ELSE %DO;
    KEEP &VAR &EVENT &GROUPS TEST _BY;
  %END;
  PROC SUMMARY DATA=&OUT NWAY;
       VAR TEST; OUTPUT OUT=OUTTEST SUM=TEST;
  DATA OUTTEST; SET OUTTEST;
  CALL SYMPUT('TEST',TEST); RUN;
*******************************************************************************;
* Summarize groups for all events                                              ;
  %IF &TEST>0 %THEN %DO; PROC SORT DATA=&OUT; BY _BY; %END;
  %IF &COX=0 %THEN %DO;
    PROC SUMMARY DATA=&OUT; %IF &TEST>0 %THEN %DO; BY _BY; %END;
         CLASS &GROUPS; VAR &EVENT &VAR;
         OUTPUT OUT=&OUT MEAN=&PROB &MEAN N(&EVENT)=&N SUM(&EVENT)=&SUM
         MAX(&VAR)=&MAX MIN(&VAR)=&MIN;
  %END;
  %ELSE %DO;
    PROC SUMMARY DATA=&OUT; %IF &TEST>0 %THEN %DO; BY _BY; %END;
         CLASS &GROUPS; VAR &EVENT &VAR &INTERVAL;
         OUTPUT OUT=&OUT MEAN(&EVENT &VAR)=&PROB &MEAN N(&EVENT)=&N
         SUM(&EVENT &INTERVAL)=&SUM SUM_INT MAX(&VAR)=&MAX MIN(&VAR)=&MIN;
  %END;
*******************************************************************************;
* Specify tranform:                                                            ;
*   Logistic:  Ln[P/(1-P)]                                                     ;
*   Gompertz:  Ln(-Ln[P])                                                      ;
*   Cox:       Ln[E/Sum(T)] (proportional constant hazards)                    ;
  DATA &OUT; SET &OUT;
  IF _TYPE_;
  %IF &COX=0 %THEN %DO;
    Q=1-&PROB;
    IF &GOMPIT=0 THEN &LOGIT=LOG(&PROB/Q);
    ELSE &LOGIT=LOG(-LOG(Q));
    %IF &TEST>0 %THEN %DO; &BY=_BY; %END;
    %IF &TEST>0 %THEN %DO; DROP _BY; %END;
    DROP Q;
  %END;
  %ELSE %DO; &LOGIT=LOG(&SUM/SUM_INT); DROP SUM_INT; %END;
  DROP _TYPE_ _FREQ_;
  OPTIONS NOTES;
*******************************************************************************;
  %MEND;
*******************************************************************************;
