*______________________________________________________________________________;
* <2012-04-23>                                                                 ;
*                                                                              ;
*                                                                              ;
* Bootstrap macro, that processes everything during a single randomization.    ;
*______________________________________________________________________________;
*                                                                              ;
  %MACRO HAZBOOT(IN=IN, _TVC=0, _IDVAR=_IDVAR, OUTEARLY=OUTEARLY,
      OUTCONST=OUTCONST, OUTLATE=OUTLATE, SEED=-1, RESAMPL=1000, FRACTION=1.0,
      FIXED=0, SLE=0.07, SLS=0.05, TEST=0);
*______________________________________________________________________________;
*                                                                              ;
* DEFINITIONS OF CALLING ARGUMENTS:                         DEFAULT:           ;
*                                                                              ;
*   IN       = Input data set name                          IN                 ;
*   _TVC      = Bootstrap for time-varying covariate (tvc)   0                 ;
*              dataset. When _TVC=1, the dataset IN should                     ;
*              be in tvc format with unique patient                            ;
*              identifier _IDVAR                                               ;
*   _IDVAR    = Unique patient identifier, only needed       _IDVAR            ;
*              when _TVC=1                                                     ;      
*   OUTEARLY = Output dataset name, early phase             OUTEARLY           ;
*   OUTCONST = Output dataset name, constant phase          OUTCONST           ;
*   OUTLATE  = Output data set name, late phase             OUTLATE            ;
*   SEED     = Randomization seed                           -1                 ;
*              Default uses time of day as the seed                            ;
*   RESAMPL  = Number of valid models to generate           1000               ;
*   FRACTION = Fractional size of bootstrap                 1.0 (100% of n)    ;
*              If < 1, then a random sample of the size                        ;
*              specified will be used.                                         ;
*   FIXED      Fixed variable model, no variable selection  0                  ;
*   SLE      = Criteria for variable entry                  0.07               ;
*   SLS      = Criteria for variable retention              0.05               ;
*   TEST     = Test bootstrap with n samples                n                  ;
*                                                                              ;
* IN ADDITION:  A MACRO CALLED HMMODEL IS USED:                                ;
*   HMMODEL  = Macro that defines the model and variables to be used in the    ;
*              bootstrap analysis.  This model needs the following standard    ;
*              PROC HAZARD statements:                                         ;
*      TIME time sas name (this may be interval and left censored as well)     ;
*      EVENT event sas name;                                                   ;
*      PARMS MUE etc MUC etc MUL etc as needed with all shaping parameters     ;
*            FIXed                                                             ;
*      EARLY variable list                                                     ;
*      CONSTANT variable list                                                  ;
*      LATE variable list                                                      ;
*______________________________________________________________________________;
*                                                                              ;
* Set up:                                                                      ;
  %IF &TEST=0 %THEN %DO; OPTIONS NONOTES; %END;
  %IF &TEST>0 %THEN %DO; %LET RESAMPL=&TEST; %END;
  %IF &fixed=1 %THEN %DO; %let varselct= ; %END;
  %IF &fixed=0 %THEN %DO;
    %if &test=0 %then %do;
      %let varselct=selection sle=&sle sls=&sls noq robust; 
    %end;
    %if &test>0 %then %do;
      %let varselct=selection sle=&sle sls=&sls robust; 
    %end;
  %END;
*******************************************************************************;
**Get unique dataset where dataset is FROM time-varying covariate format;
%IF &_TVC=1 %THEN %DO;
   PROC SORT DATA=&IN; BY &_IDVAR;
   DATA _BDUNI; SET &IN; BY &_IDVAR; IF FIRST.&_IDVAR; KEEP &_IDVAR;
%END;     
*******************************************************************************;
* Get data set size                                                            ;
%IF &_TVC=0 %THEN %DO; 
 DATA &IN; SET &IN NOBS=NUM; _NOBS_=NUM;
  IF _N_=1 THEN CALL SYMPUT('DS_SIZE', _NOBS_); RUN;
%END; 
%ELSE %DO;
  DATA _BDUNI; SET _BDUNI NOBS=NUM; _NOBS_=NUM;
  IF _N_=1 THEN CALL SYMPUT('DS_SIZE', _NOBS_); RUN;
%END;   
*******************************************************************************;
* Loop for each resampling (generates one observation in each output data set) ;
  %GLOBAL HZRNOTES HAZRC;
  %LET HZRNOTES=1;
  %LET SAMPLE=0;
  %LET TSAMPLES=0;
  %LET SIZE=&DS_SIZE*&FRACTION;
  %PUT 'Data Set Size' &DS_SIZE &FRACTION &SIZE;
  %DO %WHILE(&SAMPLE<&RESAMPL);
     %LET TSAMPLES=%EVAL(&TSAMPLES+1);
*******************************************************************************;
* Resample the data with replacement to generate a data set the same size as   ;
* the original one, but with observations chosen at random from the original   ;
* data set, unless FRACTION is < 1.0                                           ;
%IF &_TVC=0 %THEN %DO;
     DATA BOOTSTRP;
     DO J=1 TO &SIZE;                               *  Observations loop       ;
       R=RANUNI(&SEED);                             *  Random number (0 to 1)  ;
       N=MAX(MIN(FLOOR(&DS_SIZE*R)+1,&DS_SIZE),1);  *  Observation pointer     ;
       SET &IN POINT=N;                             *  Get observation         ;
       OUTPUT;                                      *  Output observation      ;
     END;
     STOP;
     RUN;
%END; 
%ELSE %DO;
     DATA BOOT_UNI;
     DO J=1 TO &SIZE;                               *  Observations loop       ;
       R=RANUNI(&SEED);                             *  Random number (0 to 1)  ;
       N=MAX(MIN(FLOOR(&DS_SIZE*R)+1,&DS_SIZE),1);  *  Observation pointer     ;
       SET _BDUNI POINT=N;                          *  Get observation         ;
       OUTPUT;                                      *  Output observation      ;
     END; STOP; RUN;
       %END;  
*______________________________________________________________________________;
* FOR TIME VARYING COVARIATE DATASET                                           ;
* Now match the bootstrapped patient with segmented  record data to extract    ;
* the semented records;
*______________________________________________________________________________;

%IF &_TVC=1 %THEN %DO;
PROC SQL;
     CREATE TABLE  BOOTSTRP AS
                   SELECT B.*, M.*
                          FROM BOOT_UNI AS B LEFT JOIN &IN AS M
                          ON B.&_IDVAR=M.&_IDVAR;
QUIT; 
                %END;      
*______________________________________________________________________________;
*                                                                              ;
* Stepwise analysis with no printout                                           ;
*                                                                              ;
* NOTE:  You should assemble your variables VERY carefully, preferably after   ;
*        you have analyzed the data "by hand."  That analysis likely identified;
*        variables that are poor candidates for a model (for example, are      ;
*        associated with a single event, or occur with exceedingly low         ;
*        frequency), and these should not be used (remember that this is an    ;
*        automated analysis, not one you can "watch" as it is constructed!)    ;
*                                                                              ;
* NOTE:  If you are not selecting variables, use FIXED=1 for bootstrapping
*        coefficient values only.
*______________________________________________________________________________;
*                                                                              ;
  %IF &TEST=0 %THEN %DO;
    %HAZARD(
    PROC HAZARD DATA=BOOTSTRP NOCOV NOCOR CONDITION=14 OUTHAZ=OUTEST
         NOPRINT NOLOG;
         %HMMODEL;
         &varselct;
    );
  %END;
  %ELSE %DO;
    %HAZARD(
    PROC HAZARD DATA=BOOTSTRP NOCOV NOCOR CONDITION=14 OUTHAZ=OUTEST;
         %HMMODEL;
         &varselct;
    );
  %END;
*******************************************************************************;
* Check to see if we have a model.  If not, do another sampling in its place   ;
  %IF &HAZRC=0 %THEN %DO;
  %LET SAMPLE=%EVAL(&SAMPLE+1);
*______________________________________________________________________________;
*                                                                              ;
* Prepare a data set for estimates from each randomization                     ;
*______________________________________________________________________________;
*                                                                              ;
  DATA EST; SET OUTEST (KEEP=_NAME_ _EST_) NOBS=ESTS;
  IF _N_>14;
*******************************************************************************;
* First 14 observations are related to the structure of the model, not the risk;
* factors, so we can discard them.  What is left is the symmetrical information;
* for 3 phases, in order, from intercept through the variables contained in the;
* first third of the file.  Note that all variables in any phase appear in all ;
* phases, but with the coefficient set to zero for variables not in a specific ;
* phase.                                                                       ;
  NV3=(ESTS-14)/3;
  NMOD=1+INT((_N_-15)/NV3);
  IF _EST_=0.0 THEN _EST_=.;
  %IF &TEST>0 %THEN %DO; PROC PRINT DATA=EST; %END;
*******************************************************************************;
* Generate a separate data set for early, constant, and late hazard phases.    ;
* This requires that the names of variables be carried over to constant and    ;
* late phases.                                                                 ;
  DATA ESTEARLY; SET EST (WHERE=(NMOD=1));
    DROP NV3 NMOD;
  %IF &TEST>0 %THEN %DO; PROC PRINT DATA=ESTEARLY; %END;
*******************************************************************************;
* Extract variable names and put these onto the individual data sets           ;
  DATA NAMES; SET ESTEARLY (KEEP=_NAME_);
  %IF &TEST>0 %THEN %DO; PROC PRINT DATA=NAMES; %END;
  DATA ESTCONST; SET EST (WHERE=(NMOD=2));
    DROP _NAME_ NV3 NMOD;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=ESTCONST; %END;
    DATA ESTCONST; MERGE NAMES ESTCONST;
    IF _N_=1 THEN _NAME_='C0';
    IF _EST_=0.0 THEN _EST_=.;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=ESTCONST; %END;

  DATA ESTLATE; SET EST (WHERE=(NMOD=3));
    DROP _NAME_ NV3 NMOD;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=ESTLATE; %END;
    DATA ESTLATE; MERGE NAMES ESTLATE;
    IF _N_=1 THEN _NAME_='L0';
    IF _EST_=0.0 THEN _EST_=.;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=ESTLATE; %END;
*******************************************************************************;
* Transpose the data sets for storage.  A single observation will be created   ;
* consisting of the estimates for the variables that are now the variable names;
  PROC TRANSPOSE DATA=ESTEARLY OUT=ESTEARLY;
    DATA ESTEARLY; SET ESTEARLY; DROP _NAME_; RESAMPL=&SAMPLE;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=ESTEARLY; %END;
  PROC TRANSPOSE DATA=ESTCONST OUT=ESTCONST;
    DATA ESTCONST; SET ESTCONST; DROP _NAME_; RESAMPL=&SAMPLE;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=ESTCONST; %END;
  PROC TRANSPOSE DATA=ESTLATE OUT=ESTLATE;
    DATA ESTLATE; SET ESTLATE; DROP _NAME_; RESAMPL=&SAMPLE;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=ESTLATE; %END;
*******************************************************************************;
* Append (concatinate) this result to the output data set                      ;
    DATA &OUTEARLY; SET &OUTEARLY ESTEARLY;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=&OUTEARLY; %END;
    DATA &OUTCONST; SET &OUTCONST ESTCONST;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=&OUTCONST; %END;
    DATA &OUTLATE; SET &OUTLATE ESTLATE;
    %IF &TEST>0 %THEN %DO; PROC PRINT DATA=&OUTLATE; %END;
    PROC DELETE DATA=ESTEARLY ESTCONST ESTLATE NAMES EST OUTEST;
    %END;
  %END;
*______________________________________________________________________________;
*                                                                              ;
* Summary of bootstrapping                                                     ;
*______________________________________________________________________________;
*                                                                              ;
  OPTIONS NOTES;
  %PUT Total number of resamplings was &TSAMPLES to generate &RESAMPL models.;
  %MEND HAZBOOT;
*______________________________________________________________________________;
*                                                                              ;
