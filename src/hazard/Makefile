# Makefile.in generated by automake 1.15 from Makefile.am.
# src/hazard/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2000 The Cleveland Clinic Foundation <hazard@bio.ri.ccf.org>
#
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without
# modifications, as long as this notice is preserved.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPO



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/hazard_package
pkgincludedir = $(includedir)/hazard_package
pkglibdir = $(libdir)/hazard_package
pkglibexecdir = $(libexecdir)/hazard_package
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
noinst_PROGRAMS = hazard.purify$(EXEEXT)
bin_PROGRAMS = hazard.exe$(EXEEXT)
subdir = src/hazard
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_hazard_exe_OBJECTS = alocmem.$(OBJEXT) hazard.$(OBJEXT) \
	hazrerr.$(OBJEXT) memclc1.$(OBJEXT) readc1.$(OBJEXT) \
	readwt.$(OBJEXT) setrisk.$(OBJEXT) wghtprc.$(OBJEXT) \
	alocwrk.$(OBJEXT) hazpprc.$(OBJEXT) hzrbomb.$(OBJEXT) \
	memclc2.$(OBJEXT) readc2.$(OBJEXT) setconc.$(OBJEXT) \
	setstat.$(OBJEXT) cntobs.$(OBJEXT) opnfils.$(OBJEXT) \
	hzri.$(OBJEXT) readc3.$(OBJEXT) setidxs.$(OBJEXT) \
	stmtprc.$(OBJEXT) evntprc.$(OBJEXT) hazrd2.$(OBJEXT) \
	icnsprc.$(OBJEXT) parmprc.$(OBJEXT) readct.$(OBJEXT) \
	setobs.$(OBJEXT) stpwprc.$(OBJEXT) finprmx.$(OBJEXT) \
	hazrd3.$(OBJEXT) initprz.$(OBJEXT) phasidx.$(OBJEXT) \
	readlc.$(OBJEXT) setparmno.$(OBJEXT) theta_x.$(OBJEXT) \
	getconc.$(OBJEXT) hazrd4.$(OBJEXT) lcnsprc.$(OBJEXT) \
	przconc.$(OBJEXT) readobs.$(OBJEXT) setprmf.$(OBJEXT) \
	timeprc.$(OBJEXT) getrisk.$(OBJEXT) rcnsprc.$(OBJEXT) \
	readt.$(OBJEXT) set_restrict.$(OBJEXT) vfynvar.$(OBJEXT) \
	hazard_y.$(OBJEXT) hazard_l.$(OBJEXT) hzrg.$(OBJEXT) \
	varsrpt.$(OBJEXT) concrpt.$(OBJEXT) results.$(OBJEXT) \
	obsstat.$(OBJEXT) vrpt.$(OBJEXT) vrpt_l.$(OBJEXT) \
	vrpt_d.$(OBJEXT) vrpt_dl.$(OBJEXT) vput.$(OBJEXT) \
	vput_l.$(OBJEXT) vput_d.$(OBJEXT) vput_dl.$(OBJEXT) \
	varterm.$(OBJEXT) varnote.$(OBJEXT) crpt.$(OBJEXT) \
	crpt_d.$(OBJEXT) crpt_l.$(OBJEXT) crpt_dl.$(OBJEXT) \
	cput.$(OBJEXT) cput_v.$(OBJEXT) cput_d.$(OBJEXT) \
	cput_l.$(OBJEXT) cput_dl.$(OBJEXT) cput_vv.$(OBJEXT) \
	outmods.$(OBJEXT) outemod.$(OBJEXT) outcmod.$(OBJEXT) \
	outlmod.$(OBJEXT) outflgs.$(OBJEXT) cmpmeth.$(OBJEXT) \
	modterm.$(OBJEXT) ismuchg.$(OBJEXT) outflag.$(OBJEXT) \
	outequn.$(OBJEXT) outparm.$(OBJEXT) \
	writeOutputDatafile.$(OBJEXT) shape.$(OBJEXT)
hazard_exe_OBJECTS = $(am_hazard_exe_OBJECTS)
hazard_exe_LDADD = $(LDADD)
hazard_exe_DEPENDENCIES =
am__objects_1 = alocmem.$(OBJEXT) hazard.$(OBJEXT) hazrerr.$(OBJEXT) \
	memclc1.$(OBJEXT) readc1.$(OBJEXT) readwt.$(OBJEXT) \
	setrisk.$(OBJEXT) wghtprc.$(OBJEXT) alocwrk.$(OBJEXT) \
	hazpprc.$(OBJEXT) hzrbomb.$(OBJEXT) memclc2.$(OBJEXT) \
	readc2.$(OBJEXT) setconc.$(OBJEXT) setstat.$(OBJEXT) \
	cntobs.$(OBJEXT) opnfils.$(OBJEXT) hzri.$(OBJEXT) \
	readc3.$(OBJEXT) setidxs.$(OBJEXT) stmtprc.$(OBJEXT) \
	evntprc.$(OBJEXT) hazrd2.$(OBJEXT) icnsprc.$(OBJEXT) \
	parmprc.$(OBJEXT) readct.$(OBJEXT) setobs.$(OBJEXT) \
	stpwprc.$(OBJEXT) finprmx.$(OBJEXT) hazrd3.$(OBJEXT) \
	initprz.$(OBJEXT) phasidx.$(OBJEXT) readlc.$(OBJEXT) \
	setparmno.$(OBJEXT) theta_x.$(OBJEXT) getconc.$(OBJEXT) \
	hazrd4.$(OBJEXT) lcnsprc.$(OBJEXT) przconc.$(OBJEXT) \
	readobs.$(OBJEXT) setprmf.$(OBJEXT) timeprc.$(OBJEXT) \
	getrisk.$(OBJEXT) rcnsprc.$(OBJEXT) readt.$(OBJEXT) \
	set_restrict.$(OBJEXT) vfynvar.$(OBJEXT) hazard_y.$(OBJEXT) \
	hazard_l.$(OBJEXT) hzrg.$(OBJEXT) varsrpt.$(OBJEXT) \
	concrpt.$(OBJEXT) results.$(OBJEXT) obsstat.$(OBJEXT) \
	vrpt.$(OBJEXT) vrpt_l.$(OBJEXT) vrpt_d.$(OBJEXT) \
	vrpt_dl.$(OBJEXT) vput.$(OBJEXT) vput_l.$(OBJEXT) \
	vput_d.$(OBJEXT) vput_dl.$(OBJEXT) varterm.$(OBJEXT) \
	varnote.$(OBJEXT) crpt.$(OBJEXT) crpt_d.$(OBJEXT) \
	crpt_l.$(OBJEXT) crpt_dl.$(OBJEXT) cput.$(OBJEXT) \
	cput_v.$(OBJEXT) cput_d.$(OBJEXT) cput_l.$(OBJEXT) \
	cput_dl.$(OBJEXT) cput_vv.$(OBJEXT) outmods.$(OBJEXT) \
	outemod.$(OBJEXT) outcmod.$(OBJEXT) outlmod.$(OBJEXT) \
	outflgs.$(OBJEXT) cmpmeth.$(OBJEXT) modterm.$(OBJEXT) \
	ismuchg.$(OBJEXT) outflag.$(OBJEXT) outequn.$(OBJEXT) \
	outparm.$(OBJEXT) writeOutputDatafile.$(OBJEXT) \
	shape.$(OBJEXT)
am_hazard_purify_OBJECTS = $(am__objects_1)
hazard_purify_OBJECTS = $(am_hazard_purify_OBJECTS)
hazard_purify_LDADD = $(LDADD)
hazard_purify_DEPENDENCIES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(hazard_exe_SOURCES) $(hazard_purify_SOURCES)
DIST_SOURCES = $(hazard_exe_SOURCES) $(hazard_purify_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs $(top_srcdir)/ylwrap hazard_l.c \
	hazard_y.c hazard_y.h
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.15
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.15
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -ll
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lm 
LTLIBOBJS = 
MAJ_VER = 4
MAKEINFO = makeinfo
MIC_VER = 0
MIN_VER = 3
MKDIR_P = ../.././install-sh -c -d
OBJEXT = o
PACKAGE = hazard_package
PACKAGE_BUGREPORT = 
PACKAGE_NAME = Hazard_Package
PACKAGE_STRING = Hazard_Package 4.3.1
PACKAGE_TARNAME = hazard_package
PACKAGE_URL = 
PACKAGE_VERSION = 4.3.1
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 4.3.1
YACC = bison -y
YFLAGS = 
abs_builddir = /Users/john/hazard/src/hazard
abs_srcdir = /Users/john/hazard/src/hazard
abs_top_builddir = /Users/john/hazard
abs_top_srcdir = /Users/john/hazard
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
docs_hazardfilesdir = ${docs_userguidesdir}/hazard_files
docs_hazpredfilesdir = ${docs_userguidesdir}/hazpred_files
docs_overviewdir = 
docs_userguidesdir = ${docsdir}/user_guides
docsdir = ${prefix}/docs
dvidir = ${docdir}
examples_datadir = ${examplesdir}/data
examples_ihddir = ${examples_sasestdir}/ihd
examples_outputdir = ${examplesdir}/output
examples_sasestdir = ${examplesdir}/sasest
examplesdir = ${prefix}/examples
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/john/hazard/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
macrosdir = ${prefix}/macros
maindir = ${prefix}
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

# Create this CCLD definition (default is just $(CC)) to enable
# the use of rational tools on the code.
AM_YFLAGS = -d
hazard_purify_SOURCES = $(hazard_exe_SOURCES)
hazard_purify_LINK = $(PURIFY) $(LINK)

# The standard build rules
# included header files from the source location
AM_CPPFLAGS = $(EXTRA_INCLUDES) \
	-I$(top_srcdir)/src/common \
	-I$(top_srcdir)/src/utils \
	-I$(top_srcdir)/src/vars \
	-I$(top_srcdir)/src/vcov \
	-I$(top_srcdir)/src/model \
	-I$(top_srcdir)/src/llike \
	-I$(top_srcdir)/src/optim \
	-I$(top_srcdir)/src/stat


# Library pointers, libs are constructed in the build locations
AM_LDFLAGS = -L$(top_builddir)/src/vars \
	-L$(top_builddir)/src/vcov \
	-L$(top_builddir)/src/stat \
	-L$(top_builddir)/src/optim \
	-L$(top_builddir)/src/model \
	-L$(top_builddir)/src/llike \
	-L$(top_builddir)/src/utils \
	-L$(top_builddir)/src/common

LDADD = -lvars -lvcov -lstat -loptim -lmodel -lllike -lutils -lcommon -lm

# A list  of header files to include in the distribution
noinst_HEADERS = alocmem.h alocwrk.h cntobs.h evntprc.h finprmx.h getconc.h \
	getrisk.h hazard.h hazard_y.h hazpprc.h hazrd2.h hazrd3.h \
	hazrd4.h hazrerr.h hzrbomb.h hzrg.h hzri.h hzrinc.h \
	icnsprc.h initprz.h lcnsprc.h memclc1.h memclc2.h opnfils.h parmprc.h \
	phasidx.h przconc.h rcnsprc.h readc1.h readc2.h readc3.h readct.h \
	readlc.h readobs.h readt.h readwt.h setconc.h setidxs.h setobs.h \
	setparmno.h setprmf.h set_restrict.h setrisk.h setstat.h shape.h \
	stpwprc.h theta_x.h timeprc.h vfynvar.h wghtprc.h  \
	varsrpt.h concrpt.h results.h obsstat.h vrpt.h vrpt_l.h vrpt_d.h \
	vrpt_dl.h vput.h vput_l.h vput_d.h vput_dl.h varterm.h varnote.h \
	crpt.h crpt_d.h crpt_l.h crpt_dl.h cput.h cput_v.h cput_d.h cput_l.h \
	cput_dl.h cput_vv.h outmods.h outemod.h outcmod.h outlmod.h outflgs.h \
	cmpmeth.h modterm.h ismuchg.h outflag.h outequn.h outparm.h \
	writeOutputDatafile.h stmtprc.h


# The source files required to build the executable.
hazard_exe_SOURCES = alocmem.c hazard.c hazrerr.c memclc1.c readc1.c readwt.c \
	setrisk.c wghtprc.c alocwrk.c hazpprc.c hzrbomb.c memclc2.c readc2.c \
	setconc.c setstat.c cntobs.c  hzrg.h opnfils.c hzri.c \
	readc3.c  setidxs.c stmtprc.c evntprc.c hazrd2.c  icnsprc.c \
	parmprc.c readct.c  setobs.c  stpwprc.c finprmx.c hazrd3.c  initprz.c \
	phasidx.c readlc.c  setparmno.c theta_x.c getconc.c hazrd4.c \
	lcnsprc.c przconc.c readobs.c setprmf.c timeprc.c getrisk.c  \
	rcnsprc.c readt.c   set_restrict.c vfynvar.c hazard_y.y hazard_l.l \
	hzrg.c varsrpt.c concrpt.c results.c obsstat.c vrpt.c vrpt_l.c \
	vrpt_d.c vrpt_dl.c vput.c vput_l.c vput_d.c vput_dl.c varterm.c \
	varnote.c crpt.c crpt_d.c crpt_l.c crpt_dl.c cput.c cput_v.c cput_d.c \
	cput_l.c cput_dl.c cput_vv.c outmods.c outemod.c outcmod.c outlmod.c \
	outflgs.c cmpmeth.c modterm.c ismuchg.c outflag.c outequn.c outparm.c \
	writeOutputDatafile.c shape.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .l .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/hazard/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/hazard/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
hazard_y.h: hazard_y.c
	@if test ! -f $@; then rm -f hazard_y.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) hazard_y.c; else :; fi

hazard.exe$(EXEEXT): $(hazard_exe_OBJECTS) $(hazard_exe_DEPENDENCIES) $(EXTRA_hazard_exe_DEPENDENCIES) 
	@rm -f hazard.exe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hazard_exe_OBJECTS) $(hazard_exe_LDADD) $(LIBS)

hazard.purify$(EXEEXT): $(hazard_purify_OBJECTS) $(hazard_purify_DEPENDENCIES) $(EXTRA_hazard_purify_DEPENDENCIES) 
	@rm -f hazard.purify$(EXEEXT)
	$(AM_V_GEN)$(hazard_purify_LINK) $(hazard_purify_OBJECTS) $(hazard_purify_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/alocmem.Po
include ./$(DEPDIR)/alocwrk.Po
include ./$(DEPDIR)/cmpmeth.Po
include ./$(DEPDIR)/cntobs.Po
include ./$(DEPDIR)/concrpt.Po
include ./$(DEPDIR)/cput.Po
include ./$(DEPDIR)/cput_d.Po
include ./$(DEPDIR)/cput_dl.Po
include ./$(DEPDIR)/cput_l.Po
include ./$(DEPDIR)/cput_v.Po
include ./$(DEPDIR)/cput_vv.Po
include ./$(DEPDIR)/crpt.Po
include ./$(DEPDIR)/crpt_d.Po
include ./$(DEPDIR)/crpt_dl.Po
include ./$(DEPDIR)/crpt_l.Po
include ./$(DEPDIR)/evntprc.Po
include ./$(DEPDIR)/finprmx.Po
include ./$(DEPDIR)/getconc.Po
include ./$(DEPDIR)/getrisk.Po
include ./$(DEPDIR)/hazard.Po
include ./$(DEPDIR)/hazard_l.Po
include ./$(DEPDIR)/hazard_y.Po
include ./$(DEPDIR)/hazpprc.Po
include ./$(DEPDIR)/hazrd2.Po
include ./$(DEPDIR)/hazrd3.Po
include ./$(DEPDIR)/hazrd4.Po
include ./$(DEPDIR)/hazrerr.Po
include ./$(DEPDIR)/hzrbomb.Po
include ./$(DEPDIR)/hzrg.Po
include ./$(DEPDIR)/hzri.Po
include ./$(DEPDIR)/icnsprc.Po
include ./$(DEPDIR)/initprz.Po
include ./$(DEPDIR)/ismuchg.Po
include ./$(DEPDIR)/lcnsprc.Po
include ./$(DEPDIR)/memclc1.Po
include ./$(DEPDIR)/memclc2.Po
include ./$(DEPDIR)/modterm.Po
include ./$(DEPDIR)/obsstat.Po
include ./$(DEPDIR)/opnfils.Po
include ./$(DEPDIR)/outcmod.Po
include ./$(DEPDIR)/outemod.Po
include ./$(DEPDIR)/outequn.Po
include ./$(DEPDIR)/outflag.Po
include ./$(DEPDIR)/outflgs.Po
include ./$(DEPDIR)/outlmod.Po
include ./$(DEPDIR)/outmods.Po
include ./$(DEPDIR)/outparm.Po
include ./$(DEPDIR)/parmprc.Po
include ./$(DEPDIR)/phasidx.Po
include ./$(DEPDIR)/przconc.Po
include ./$(DEPDIR)/rcnsprc.Po
include ./$(DEPDIR)/readc1.Po
include ./$(DEPDIR)/readc2.Po
include ./$(DEPDIR)/readc3.Po
include ./$(DEPDIR)/readct.Po
include ./$(DEPDIR)/readlc.Po
include ./$(DEPDIR)/readobs.Po
include ./$(DEPDIR)/readt.Po
include ./$(DEPDIR)/readwt.Po
include ./$(DEPDIR)/results.Po
include ./$(DEPDIR)/set_restrict.Po
include ./$(DEPDIR)/setconc.Po
include ./$(DEPDIR)/setidxs.Po
include ./$(DEPDIR)/setobs.Po
include ./$(DEPDIR)/setparmno.Po
include ./$(DEPDIR)/setprmf.Po
include ./$(DEPDIR)/setrisk.Po
include ./$(DEPDIR)/setstat.Po
include ./$(DEPDIR)/shape.Po
include ./$(DEPDIR)/stmtprc.Po
include ./$(DEPDIR)/stpwprc.Po
include ./$(DEPDIR)/theta_x.Po
include ./$(DEPDIR)/timeprc.Po
include ./$(DEPDIR)/varnote.Po
include ./$(DEPDIR)/varsrpt.Po
include ./$(DEPDIR)/varterm.Po
include ./$(DEPDIR)/vfynvar.Po
include ./$(DEPDIR)/vput.Po
include ./$(DEPDIR)/vput_d.Po
include ./$(DEPDIR)/vput_dl.Po
include ./$(DEPDIR)/vput_l.Po
include ./$(DEPDIR)/vrpt.Po
include ./$(DEPDIR)/vrpt_d.Po
include ./$(DEPDIR)/vrpt_dl.Po
include ./$(DEPDIR)/vrpt_l.Po
include ./$(DEPDIR)/wghtprc.Po
include ./$(DEPDIR)/writeOutputDatafile.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f hazard_l.c
	-rm -f hazard_y.c
	-rm -f hazard_y.h
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
